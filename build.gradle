buildscript {
	dependencies {
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}


plugins {
	id 'org.springframework.boot' version '2.6.4-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.casestudy.bulk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'junit:junit:4.13.1'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.0.Final"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok:1.18.8'
	runtimeOnly "org.postgresql:postgresql:42.2.6"
	implementation "org.liquibase:liquibase-core:3.7.0"
	implementation "com.opencsv:opencsv:5.5.2"
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation "org.mapstruct:mapstruct:1.3.0.Final"
	annotationProcessor 'org.projectlombok:lombok:1.18.8'
	testImplementation "org.testng:testng:6.9.10"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
	useJUnitPlatform()
	useTestNG()
}
